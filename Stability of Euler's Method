{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#DiffEq Project1\n",
    "import numpy as np\n",
    "from scipy.integrate import odeint\n",
    "import matplotlib.pyplot as plt\n",
    "import math as math\n",
    "\n",
    "#Part A\n",
    "#Delta t steps\n",
    "ts = np.linspace(0.1, 1, 10)\n",
    "\n",
    "#Exact Solution\n",
    "def decay(k,t):\n",
    "    return math.e**(-k*t)\n",
    "\n",
    "#Plotting Exact Solution with different decay rates\n",
    "plt.plot(ts, decay(1, ts))\n",
    "plt.plot(ts, decay(5, ts))\n",
    "plt.plot(ts, decay(15, ts))\n",
    "plt.plot(ts, decay(25, ts))\n",
    "plt.xlabel('t step')\n",
    "plt.ylabel('Value of Exact Solution')\n",
    "plt.legend() #Not working, need to edit this value\n",
    "\n",
    "#Forward Euler's Method (Approximate Solution)\n",
    "def euler(tn):\n",
    "\n",
    "tn = 0.1\n",
    "for i in range(10):\n",
    "    print(tn)\n",
    "    tn = tn + (0.1*i)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
